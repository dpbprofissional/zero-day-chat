@import url('https://fonts.googleapis.com/css2?family=Fira+Code:wght@300;400;500;600;700&display=swap');

@tailwind base;
@tailwind components;
@tailwind utilities;

/* Hacker Theme Design System */

@layer base {
  :root {
    --background: 0 0% 5%;
    --foreground: 123 100% 60%;

    --card: 0 0% 8%;
    --card-foreground: 123 100% 60%;

    --popover: 0 0% 8%;
    --popover-foreground: 123 100% 60%;

    --primary: 123 100% 50%;
    --primary-foreground: 0 0% 5%;
    --primary-glow: 123 100% 70%;

    --secondary: 180 100% 50%;
    --secondary-foreground: 0 0% 5%;

    --muted: 0 0% 15%;
    --muted-foreground: 123 50% 40%;

    --accent: 180 100% 50%;
    --accent-foreground: 0 0% 5%;

    --destructive: 0 84.2% 60.2%;
    --destructive-foreground: 210 40% 98%;

    --border: 123 50% 20%;
    --input: 123 50% 15%;
    --ring: 123 100% 50%;

    --radius: 0.25rem;

    /* Custom hacker theme tokens */
    --terminal-green: 123 100% 50%;
    --terminal-cyan: 180 100% 50%;
    --terminal-bg: 0 0% 5%;
    --terminal-bg-lighter: 0 0% 8%;
    --glow-color: 123 100% 50%;
    
    /* Gradients */
    --gradient-primary: linear-gradient(135deg, hsl(123 100% 50% / 0.2), hsl(180 100% 50% / 0.1));
    --gradient-glow: linear-gradient(180deg, hsl(123 100% 50% / 0.1), transparent);
    
    /* Shadows */
    --shadow-glow: 0 0 20px hsl(var(--primary) / 0.3), 0 0 40px hsl(var(--primary) / 0.1);
    --shadow-terminal: 0 2px 10px hsl(0 0% 0% / 0.5);
    
    /* Animations */
    --transition-smooth: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
    font-family: 'Fira Code', 'Courier New', monospace;
    position: relative;
  }

  /* Scan line effect */
  body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      to bottom,
      transparent 50%,
      rgba(0, 255, 65, 0.02) 51%
    );
    background-size: 100% 4px;
    pointer-events: none;
    z-index: 9999;
    animation: scanline 8s linear infinite;
  }

  /* Subtle noise texture */
  body::after {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 200 200' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noise'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.9' numOctaves='3' stitchTiles='stitch'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise)' opacity='0.03'/%3E%3C/svg%3E");
    pointer-events: none;
    z-index: 9998;
  }

  @keyframes scanline {
    0% {
      transform: translateY(0);
    }
    100% {
      transform: translateY(100vh);
    }
  }
}

@layer utilities {
  .text-glow {
    text-shadow: 0 0 10px hsl(var(--primary) / 0.5), 0 0 20px hsl(var(--primary) / 0.3);
  }

  .border-glow {
    box-shadow: 0 0 10px hsl(var(--primary) / 0.3), inset 0 0 10px hsl(var(--primary) / 0.1);
  }

  .terminal-cursor::after {
    content: 'â–‹';
    animation: blink 1s step-end infinite;
    color: hsl(var(--primary));
  }

  @keyframes blink {
    0%, 50% {
      opacity: 1;
    }
    51%, 100% {
      opacity: 0;
    }
  }

  .glitch {
    position: relative;
  }

  .glitch::before,
  .glitch::after {
    content: attr(data-text);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .glitch::before {
    left: 2px;
    text-shadow: -2px 0 hsl(var(--secondary));
    clip: rect(24px, 550px, 90px, 0);
    animation: glitch-anim 3s infinite linear alternate-reverse;
  }

  .glitch::after {
    left: -2px;
    text-shadow: -2px 0 hsl(var(--primary));
    clip: rect(85px, 550px, 140px, 0);
    animation: glitch-anim 2s infinite linear alternate-reverse;
  }

  @keyframes glitch-anim {
    0% {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
    100% {
      clip: rect(random(100) + px, 9999px, random(100) + px, 0);
    }
  }

  .fade-in {
    animation: fadeIn 0.3s ease-out;
  }

  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;
  }
}
